<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-3.0.xsd">

	<context:annotation-config />
	<context:component-scan base-package="com.hunteron.api" />
	<context:component-scan base-package="com.hunteron.*.dao" />
	
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
	    <property name="locations" value="classpath:properties/*.properties" />
		<property name="fileEncoding" value="UTF-8" />
	</bean>
	
	<bean id="operateMessageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
	    <property name="basenames">
	        <set>
	        	<value>i18n/candidate_operate_msg</value>
	        </set>
	    </property>
	</bean>

	<bean id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<value>i18n/message</value>
				<value>i18n/error</value>
			</list>
		</property>
	</bean>

	<bean id="taskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<property name="corePoolSize" value="${threadpool.corePoolSize}" />
		<property name="maxPoolSize" value="${threadpool.maxPoolSize}" />
		<property name="queueCapacity" value="${threadpool.queueCapacity}" />
		<property name="threadNamePrefix" value="custom_" />
	</bean>
	
	<bean id="freemarkerTemplate" class="com.hunteron.core.template.impl.FreemarkerTemplate">
		<constructor-arg index="0" value="/template" />
	</bean>
	<bean id="disruptorInitiator" class="com.hunteron.api.outer.disruptor.DisruptorInitiator"
	    init-method="init" destroy-method="close">
		<property name="disruptorBufferSize" value="1024" />
		<property name="taskExecutor" ref="taskExecutor"/>
		<property name="eventHandlers">
			<list>
				<ref bean="resumeEventHandler"/>
				<ref bean="talentEventHandler"/>
				<ref bean="deliverEventHandler"/>
				<ref bean="contentLogEventHandler"/>
				<ref bean="resumeLogEventHandler"/>
				<ref bean="hunterOnTalentPoolEventHandler"/>
			</list>
		</property>
	</bean>
	<bean id="outDisruptorInitiator" class="com.hunteron.api.outer.disruptor.OuterDisruptorInitiator"
	    init-method="init" destroy-method="close">
		<property name="taskExecutor" ref="taskExecutor"/>
		<property name="eventHandlers">
			<list>
				<ref bean="outerResumeEventHandler"/>
<!-- 				<ref bean="outerTalentEventHandler"/>
				<ref bean="outerHunterOnTalentPoolEventHandler"/>
				<ref bean="outerDeliverEventHandler"/>
				<ref bean="outerDispTimeEventHandler"/> -->
			<!-- 	<ref bean="outerGetContactEventHandler"/> -->
			</list>
		</property>
	</bean>
	<import resource="classpath:spring/application-*-context.xml" />
	
</beans>
